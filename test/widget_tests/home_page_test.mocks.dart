// Mocks generated by Mockito 5.4.4 from annotations
// in rijksmuseum/test/widget_tests/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rijksmuseum/enums/notifier_state.dart' as _i6;
import 'package:rijksmuseum/models/art_objects.dart' as _i5;
import 'package:rijksmuseum/models/response_failure.dart' as _i7;
import 'package:rijksmuseum/providers/home_page_provider.dart' as _i4;
import 'package:rijksmuseum/services/museum_data_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMuseumDataService_0 extends _i1.SmartFake
    implements _i2.MuseumDataService {
  _FakeMuseumDataService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOption_1<A> extends _i1.SmartFake implements _i3.Option<A> {
  _FakeOption_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomePageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePageProvider extends _i1.Mock implements _i4.HomePageProvider {
  MockHomePageProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MuseumDataService get museumDataService => (super.noSuchMethod(
        Invocation.getter(#museumDataService),
        returnValue: _FakeMuseumDataService_0(
          this,
          Invocation.getter(#museumDataService),
        ),
      ) as _i2.MuseumDataService);

  @override
  set museumDataService(_i2.MuseumDataService? _museumDataService) =>
      super.noSuchMethod(
        Invocation.setter(
          #museumDataService,
          _museumDataService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Option<_i5.ArtObjects> get selectedOptionItem => (super.noSuchMethod(
        Invocation.getter(#selectedOptionItem),
        returnValue: _FakeOption_1<_i5.ArtObjects>(
          this,
          Invocation.getter(#selectedOptionItem),
        ),
      ) as _i3.Option<_i5.ArtObjects>);

  @override
  set selectedOptionItem(_i3.Option<_i5.ArtObjects>? _selectedOptionItem) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedOptionItem,
          _selectedOptionItem,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
      ) as int);

  @override
  _i6.NotifierState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i6.NotifierState.inital,
      ) as _i6.NotifierState);

  @override
  set state(_i6.NotifierState? state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.NotifierState get pagingState => (super.noSuchMethod(
        Invocation.getter(#pagingState),
        returnValue: _i6.NotifierState.inital,
      ) as _i6.NotifierState);

  @override
  set pagingState(_i6.NotifierState? state) => super.noSuchMethod(
        Invocation.setter(
          #pagingState,
          state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Either<_i7.ResponseFailure, List<_i5.ArtObjects>> get items =>
      (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: _FakeEither_2<_i7.ResponseFailure, List<_i5.ArtObjects>>(
          this,
          Invocation.getter(#items),
        ),
      ) as _i3.Either<_i7.ResponseFailure, List<_i5.ArtObjects>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i8.Future<void> getFirstPage() => (super.noSuchMethod(
        Invocation.method(
          #getFirstPage,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> getNextPage() => (super.noSuchMethod(
        Invocation.method(
          #getNextPage,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.Either<_i7.ResponseFailure, List<_i5.ArtObjects>>> getArtItems(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArtItems,
          [],
          {#page: page},
        ),
        returnValue: _i8.Future<
                _i3.Either<_i7.ResponseFailure, List<_i5.ArtObjects>>>.value(
            _FakeEither_2<_i7.ResponseFailure, List<_i5.ArtObjects>>(
          this,
          Invocation.method(
            #getArtItems,
            [],
            {#page: page},
          ),
        )),
      ) as _i8.Future<_i3.Either<_i7.ResponseFailure, List<_i5.ArtObjects>>>);

  @override
  _i8.Future<void> onScroll({
    required double? pixels,
    required double? maxScrollExtent,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #onScroll,
          [],
          {
            #pixels: pixels,
            #maxScrollExtent: maxScrollExtent,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void resetSelectedItem() => super.noSuchMethod(
        Invocation.method(
          #resetSelectedItem,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onItemTapped({_i5.ArtObjects? artItem}) => super.noSuchMethod(
        Invocation.method(
          #onItemTapped,
          [],
          {#artItem: artItem},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
