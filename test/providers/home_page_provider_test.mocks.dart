// Mocks generated by Mockito 5.2.0 from annotations
// in rijksmuseum/test/providers/home_page_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rijksmuseum/models/collection.dart' as _i3;
import 'package:rijksmuseum/models/collection_details.dart' as _i4;
import 'package:rijksmuseum/models/response_failure.dart' as _i5;
import 'package:rijksmuseum/services/museum_data_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeCollection_1 extends _i1.Fake implements _i3.Collection {}

class _FakeCollectionDetails_2 extends _i1.Fake
    implements _i4.CollectionDetails {}

class _FakeResponseFailure_3 extends _i1.Fake implements _i5.ResponseFailure {}

/// A class which mocks [MuseumDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMuseumDataService extends _i1.Mock implements _i6.MuseumDataService {
  MockMuseumDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i7.Future<_i3.Collection> getCollection(int? page) =>
      (super.noSuchMethod(Invocation.method(#getCollection, [page]),
              returnValue: Future<_i3.Collection>.value(_FakeCollection_1()))
          as _i7.Future<_i3.Collection>);
  @override
  _i7.Future<_i4.CollectionDetails> getCollectionDetails(
          {String? objectNumber}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getCollectionDetails, [], {#objectNumber: objectNumber}),
              returnValue: Future<_i4.CollectionDetails>.value(
                  _FakeCollectionDetails_2()))
          as _i7.Future<_i4.CollectionDetails>);
  @override
  _i5.ResponseFailure onError(Object? error) =>
      (super.noSuchMethod(Invocation.method(#onError, [error]),
          returnValue: _FakeResponseFailure_3()) as _i5.ResponseFailure);
}
